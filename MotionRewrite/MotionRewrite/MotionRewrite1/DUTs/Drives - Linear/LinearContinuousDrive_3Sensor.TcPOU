<?xml version="1.0" encoding="utf-8"?>
<TcPlcObject Version="1.1.0.1" ProductVersion="3.1.4024.11">
  <POU Name="LinearContinuousDrive_3Sensor" Id="{c13fdb69-1504-4b8b-bb33-c0c733ab430a}" SpecialFunc="None">
    <Declaration><![CDATA[FUNCTION_BLOCK LinearContinuousDrive_3Sensor EXTENDS FBA_LinearDrive IMPLEMENTS I_LinearContinuousDrive
VAR_INPUT
	drive : I_ContinuousDrive;
	allowDualSideTraverse : BOOL; //allows motion between home to retractLimit
END_VAR
VAR
	extendLimit AT %I* : BOOL;
	retractLimit AT %I* : BOOL;
END_VAR]]></Declaration>
    <Implementation>
      <ST><![CDATA[override();

ready := bEnable AND NOT Active AND HomeSet;]]></ST>
    </Implementation>
    <Folder Name="Private" Id="{6de7fe8d-38f4-4558-877b-899f1f6f8f4d}" />
    <Folder Name="Properties" Id="{2d4d85ee-a6c1-4363-9b96-3ff8256abc4a}" />
    <Property Name="Active" Id="{999cdb38-6a9a-40bf-ab33-71e84dcc1fd0}" FolderPath="Properties\">
      <Declaration><![CDATA[PROPERTY Active : BOOL]]></Declaration>
      <Get Name="Get" Id="{a2c211dd-f7b4-44b4-b2f6-0020a2a0a655}">
        <Declaration><![CDATA[VAR
END_VAR
]]></Declaration>
        <Implementation>
          <ST><![CDATA[Active := drive.Active;]]></ST>
        </Implementation>
      </Get>
    </Property>
    <Property Name="AtExtendLimit" Id="{bd0dba66-91bc-4de0-9418-fa30f53e8e25}" FolderPath="Properties\">
      <Declaration><![CDATA[PROPERTY AtExtendLimit : BOOL]]></Declaration>
      <Get Name="Get" Id="{23cdf262-7aec-4560-870e-b643bf7ac6be}">
        <Declaration><![CDATA[VAR
END_VAR
]]></Declaration>
        <Implementation>
          <ST><![CDATA[AtExtendLimit := extendLimit <> sensorDefaultState;]]></ST>
        </Implementation>
      </Get>
    </Property>
    <Property Name="AtRetractLimit" Id="{f16bd607-997c-484e-afe3-fd8fc3eeeb9f}" FolderPath="Properties\">
      <Declaration><![CDATA[PROPERTY AtRetractLimit : BOOL]]></Declaration>
      <Get Name="Get" Id="{cb98346f-33c4-4e80-9193-80e8da7ebe88}">
        <Declaration><![CDATA[VAR
END_VAR
]]></Declaration>
        <Implementation>
          <ST><![CDATA[AtRetractLimit := retractLimit <> sensorDefaultState;]]></ST>
        </Implementation>
      </Get>
    </Property>
    <Property Name="Error" Id="{51c01f70-9a54-4c17-bf32-d68c79a458cf}" FolderPath="Properties\">
      <Declaration><![CDATA[PROPERTY Error : BOOL]]></Declaration>
      <Get Name="Get" Id="{230db7a3-5116-487c-97f1-758523510e7c}">
        <Declaration><![CDATA[VAR
END_VAR
]]></Declaration>
        <Implementation>
          <ST><![CDATA[error := drive.Error;]]></ST>
        </Implementation>
      </Get>
    </Property>
    <Method Name="homingSequence" Id="{8cd879a5-4ac9-444d-a242-18853a4ba174}">
      <Declaration><![CDATA[METHOD homingSequence : BOOL
(*
homing sequence is different for linear motion devices with limit sensors
*)]]></Declaration>
      <Implementation>
        <ST><![CDATA[CASE step OF
	Homing.IDLE:
		reset();
		IF bEnable THEN
			step := Homing.RETRY;
		END_IF
		
	Homing.START:
		IF AtHome THEN
			step := Homing.STOP;
			
		ELSIF AtRetractLimit THEN
			step := Homing.RETRY;
			
		ELSE
			moveContinuous(newDirection:= MC_Positive_Direction);
		END_IF
		
	Homing.RETRY:
		IF AtExtendLimit THEN
			step := Homing.START;
		ELSE
			moveContinuous(newDirection:= MC_Positive_Direction);
		END_IF
		
	Homing.STOP:
		IF stop() THEN
			step := Homing.DONE;
		END_IF
		
	Homing.DONE:
		homingComplete := TRUE;
		step := Homing.IDLE;
		
END_CASE]]></ST>
      </Implementation>
    </Method>
    <Method Name="moveContinuous" Id="{ff282c40-4c0a-4ab0-97ff-6384ddf92b60}">
      <Declaration><![CDATA[METHOD moveContinuous : BOOL
VAR_INPUT
	newDirection : MC_Direction;
END_VAR]]></Declaration>
      <Implementation>
        <ST><![CDATA[drive.moveContinuous(newDirection:= newDirection);

direction := newDirection;]]></ST>
      </Implementation>
    </Method>
    <Method Name="override" Id="{5d022c1d-b087-4cc8-b413-18ebc5f9d5e3}" FolderPath="Private\">
      <Declaration><![CDATA[METHOD PRIVATE override : BOOL
VAR_INPUT
END_VAR
]]></Declaration>
      <Implementation>
        <ST><![CDATA[(*
-at home and attempting to traverse outward
-at outer limit and attempting to traverse outward
-at inner limit and attempting to traverse inwards
*)
(*
inward = negative direction, negative velocity
outward = positive direction, positive velocity
*)

IF error THEN
	stop();
	reset();
	
ELSIF
	(NOT allowDualSideTraverse AND AtHome AND direction = MC_Positive_Direction) OR
	(AtExtendLimit AND direction = MC_Negative_Direction) OR
	(AtRetractLimit AND direction = MC_Positive_Direction)
THEN
	stop();
END_IF]]></ST>
      </Implementation>
    </Method>
    <Method Name="reset" Id="{6ba26e74-3166-430f-b9c6-7c13714be874}">
      <Declaration><![CDATA[METHOD reset : BOOL
VAR_INPUT
END_VAR
]]></Declaration>
      <Implementation>
        <ST><![CDATA[reset := drive.reset();]]></ST>
      </Implementation>
    </Method>
    <Method Name="stop" Id="{ff999892-3f4d-48a2-bfab-964ee6079f09}">
      <Declaration><![CDATA[METHOD stop : BOOL
VAR_INPUT
END_VAR
]]></Declaration>
      <Implementation>
        <ST><![CDATA[stop := drive.stop();]]></ST>
      </Implementation>
    </Method>
    <Method Name="toHome" Id="{9f64872e-7516-4c4e-acd0-088f56e0cad1}">
      <Declaration><![CDATA[METHOD toHome : BOOL
VAR_INPUT
END_VAR]]></Declaration>
      <Implementation>
        <ST><![CDATA[IF AtHome THEN
	toHome := TRUE;
ELSE
	moveContinuous(newDirection := MC_Negative_Direction);
END_IF]]></ST>
      </Implementation>
    </Method>
    <LineIds Name="LinearContinuousDrive_3Sensor">
      <LineId Id="633" Count="0" />
      <LineId Id="636" Count="1" />
    </LineIds>
    <LineIds Name="LinearContinuousDrive_3Sensor.Active.Get">
      <LineId Id="11" Count="0" />
    </LineIds>
    <LineIds Name="LinearContinuousDrive_3Sensor.AtExtendLimit.Get">
      <LineId Id="2" Count="0" />
    </LineIds>
    <LineIds Name="LinearContinuousDrive_3Sensor.AtRetractLimit.Get">
      <LineId Id="2" Count="0" />
    </LineIds>
    <LineIds Name="LinearContinuousDrive_3Sensor.Error.Get">
      <LineId Id="13" Count="0" />
    </LineIds>
    <LineIds Name="LinearContinuousDrive_3Sensor.homingSequence">
      <LineId Id="439" Count="7" />
      <LineId Id="493" Count="1" />
      <LineId Id="511" Count="0" />
      <LineId Id="495" Count="0" />
      <LineId Id="509" Count="0" />
      <LineId Id="502" Count="0" />
      <LineId Id="498" Count="0" />
      <LineId Id="505" Count="1" />
      <LineId Id="459" Count="3" />
      <LineId Id="464" Count="1" />
      <LineId Id="467" Count="3" />
      <LineId Id="512" Count="0" />
      <LineId Id="475" Count="0" />
      <LineId Id="486" Count="4" />
      <LineId Id="7" Count="0" />
    </LineIds>
    <LineIds Name="LinearContinuousDrive_3Sensor.moveContinuous">
      <LineId Id="25" Count="0" />
      <LineId Id="31" Count="0" />
      <LineId Id="30" Count="0" />
    </LineIds>
    <LineIds Name="LinearContinuousDrive_3Sensor.override">
      <LineId Id="77" Count="14" />
      <LineId Id="102" Count="0" />
      <LineId Id="93" Count="0" />
      <LineId Id="101" Count="0" />
      <LineId Id="95" Count="2" />
    </LineIds>
    <LineIds Name="LinearContinuousDrive_3Sensor.reset">
      <LineId Id="18" Count="0" />
    </LineIds>
    <LineIds Name="LinearContinuousDrive_3Sensor.stop">
      <LineId Id="13" Count="0" />
    </LineIds>
    <LineIds Name="LinearContinuousDrive_3Sensor.toHome">
      <LineId Id="6" Count="0" />
      <LineId Id="13" Count="0" />
      <LineId Id="10" Count="2" />
    </LineIds>
  </POU>
</TcPlcObject>