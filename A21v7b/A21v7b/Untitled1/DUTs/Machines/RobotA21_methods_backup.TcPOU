<?xml version="1.0" encoding="utf-8"?>
<TcPlcObject Version="1.1.0.1" ProductVersion="3.1.4024.11">
  <POU Name="RobotA21_methods_backup" Id="{efb9e82d-b439-4af4-83dd-650c783cf15a}" SpecialFunc="None">
    <Declaration><![CDATA[FUNCTION_BLOCK RobotA21_methods_backup EXTENDS KukaRobot
VAR_INPUT
	out8 : INT;
END_VAR
VAR_OUTPUT
	//forceStop AT %Q* : BOOL;
	//resetSignal AT %Q* : BOOL;
	
	//outputs AT %Q* : ARRAY[1..50] OF INT;
	//inputs AT %I* : ARRAY[1..20] OF INT;
	
	taskID : INT;
	completedTask : INT;
	(*
	operational : BOOL;
	reserved : BOOL;
	reservation : SectionEnum := SectionEnum.NULL_SECTION;
	tool : SectionEnum := SectionEnum.WOOD_BUNK;
	
	error : BOOL;
	errId : DINT;
	*)
END_VAR]]></Declaration>
    <Implementation>
      <ST><![CDATA[taskID := outputs[1];
completedTask := inputs[1];

outputs[8].15 := 
	NOT strapper.enable AND 
	NOT strapper.execute;

outputs[8] := out8;]]></ST>
    </Implementation>
    <Folder Name="Properties" Id="{1470e281-74ec-4518-8098-79ea9102a8ce}" />
    <Property Name="Busy" Id="{36f726c9-efaa-434a-a1c8-56486f4162fa}" FolderPath="Properties\">
      <Declaration><![CDATA[//{attribute 'monitoring' := 'variable'}
{attribute 'monitoring' := 'call'}
PROPERTY Busy : BOOL]]></Declaration>
      <Get Name="Get" Id="{5906f38f-d0d2-4d2d-8be6-88ced41b4f3b}">
        <Declaration><![CDATA[VAR
	//emptyOutput : ARRAY[1..50] OF INT;
END_VAR
//Busy stays TRUE until outputs are cleared AND completed task has elapsed
//Ready is always inverse of Busy]]></Declaration>
        <Implementation>
          <ST><![CDATA[updateStatus();

Busy := taskID <> 0 OR completedTask <> 0;]]></ST>
        </Implementation>
      </Get>
    </Property>
    <Method Name="commandEx" Id="{8fc3402d-842f-49b2-a742-8eb20dbfc62e}">
      <Declaration><![CDATA[METHOD commandEx : BOOL
VAR_INPUT
	newOutputs : REFERENCE TO ARRAY[1..50] OF INT;
END_VAR]]></Declaration>
      <Implementation>
        <ST><![CDATA[//IF NOT Busy THEN
	//RETURN;
//END_IF

outputs := newOutputs;
commandEx := Done;

(*
CASE step OF
	SEND_COMMAND: //wait 1 cycle
		outputs := newOutputs;
		step := WAIT;
		
	WAIT:
		IF done THEN
			(*	
			IF NOT reset() THEN
				RETURN;
			END_IF
			
			step := 0;
			*)
			setCommandAndWait := TRUE;
		END_IF
		
END_CASE
*)]]></ST>
      </Implementation>
    </Method>
    <Property Name="Done" Id="{ab94ac1b-392d-4717-865a-c69d3ca1ac59}" FolderPath="Properties\">
      <Declaration><![CDATA[//{attribute 'monitoring' := 'variable'}
{attribute 'monitoring' := 'call'}
PROPERTY Done : BOOL]]></Declaration>
      <Get Name="Get" Id="{28916bb1-7370-435c-8645-47a4a83c71f2}">
        <Declaration><![CDATA[VAR
END_VAR
]]></Declaration>
        <Implementation>
          <ST><![CDATA[updateStatus();

Done :=
	completedTask = taskID AND
	taskID <> 0 AND
	completedTask <> 0;]]></ST>
        </Implementation>
      </Get>
    </Property>
    <Method Name="eStop" Id="{e1024b7f-c1d4-4d1c-9f46-317992db8f6f}">
      <Declaration><![CDATA[METHOD eStop : BOOL
VAR_INPUT
END_VAR
]]></Declaration>
      <Implementation>
        <ST><![CDATA[//forceStop := TRUE;
//eStop := TRUE;]]></ST>
      </Implementation>
    </Method>
    <Method Name="idleCommand" Id="{cb7fdee8-9138-42c4-8337-08882bb01546}">
      <Declaration><![CDATA[METHOD idleCommand : BOOL
VAR_INPUT
END_VAR
]]></Declaration>
      <Implementation>
        <ST><![CDATA[MEMSET(ADR(outputs), 0, SIZEOF(outputs));]]></ST>
      </Implementation>
    </Method>
    <Property Name="Ready" Id="{4c2d0524-ba1a-4958-9001-5c4271371a41}" FolderPath="Properties\">
      <Declaration><![CDATA[//{attribute 'monitoring' := 'variable'}
{attribute 'monitoring' := 'call'}
PROPERTY Ready : BOOL]]></Declaration>
      <Get Name="Get" Id="{fddc9d66-5ac0-4874-b9bf-99bf801e7b49}">
        <Declaration><![CDATA[VAR
END_VAR
]]></Declaration>
        <Implementation>
          <ST><![CDATA[updateStatus();

Ready := taskID = 0 AND completedTask = 0;]]></ST>
        </Implementation>
      </Get>
    </Property>
    <Method Name="release" Id="{182de378-6f51-4baf-ae92-3cea30133752}">
      <Declaration><![CDATA[METHOD release : BOOL
VAR_INPUT
	sectionReservation : SectionEnum;
END_VAR
]]></Declaration>
      <Implementation>
        <ST><![CDATA[IF reservation = sectionReservation AND reserved THEN
	reservation := SectionEnum.NULL_SECTION;
	reserved := FALSE;
	release := TRUE;
END_IF]]></ST>
      </Implementation>
    </Method>
    <Method Name="reserve" Id="{3c30ee0c-30d5-4cc7-a478-76c2033cbe44}">
      <Declaration><![CDATA[METHOD reserve : BOOL
VAR_INPUT
	reserveRequest : SectionEnum;
END_VAR
(*
this method exists because chipboard and wood bunk operations use the same robot
both sections need to check if the robot is open to commands before use
*)]]></Declaration>
      <Implementation>
        <ST><![CDATA[IF reserved AND reservation = reserveRequest THEN
	reserve := TRUE;

ELSIF (NOT reserved) AND reservation = SectionEnum.NULL_SECTION THEN
	reservation := reserveRequest;
	reserved := TRUE;
	reserve := TRUE;

END_IF]]></ST>
      </Implementation>
    </Method>
    <Method Name="reset" Id="{a996abf0-3a85-418d-8e1d-92f5d62c2de6}">
      <Declaration><![CDATA[METHOD reset : BOOL]]></Declaration>
      <Implementation>
        <ST><![CDATA[//resetSignal := TRUE;
//done := FALSE;

MEMSET(ADR(outputs), 0, SIZEOF(outputs));
(*
IF ready AND completedTask = 0 THEN
	resetSignal := FALSE;
	reset := TRUE;
END_IF
*)]]></ST>
      </Implementation>
    </Method>
    <Method Name="resume" Id="{25c71382-5780-44f4-b01c-90131fe3f7f8}">
      <Declaration><![CDATA[METHOD resume : BOOL
VAR_INPUT
END_VAR
]]></Declaration>
      <Implementation>
        <ST><![CDATA[//forceStop := FALSE;

resume := NOT error AND errId = 0;]]></ST>
      </Implementation>
    </Method>
    <Method Name="updateStatus" Id="{1838f0e4-fc01-4a97-bf78-7907501315ae}">
      <Declaration><![CDATA[METHOD updateStatus : BOOL
VAR_INPUT
END_VAR
]]></Declaration>
      <Implementation>
        <ST><![CDATA[taskID := outputs[1];
completedTask := inputs[1];]]></ST>
      </Implementation>
    </Method>
    <LineIds Name="RobotA21_methods_backup">
      <LineId Id="82" Count="0" />
      <LineId Id="110" Count="0" />
      <LineId Id="133" Count="0" />
      <LineId Id="132" Count="0" />
      <LineId Id="134" Count="0" />
      <LineId Id="136" Count="0" />
      <LineId Id="167" Count="0" />
      <LineId Id="160" Count="0" />
    </LineIds>
    <LineIds Name="RobotA21_methods_backup.Busy.Get">
      <LineId Id="6" Count="1" />
      <LineId Id="2" Count="0" />
    </LineIds>
    <LineIds Name="RobotA21_methods_backup.commandEx">
      <LineId Id="106" Count="25" />
      <LineId Id="95" Count="0" />
    </LineIds>
    <LineIds Name="RobotA21_methods_backup.Done.Get">
      <LineId Id="10" Count="0" />
      <LineId Id="7" Count="0" />
      <LineId Id="2" Count="0" />
      <LineId Id="13" Count="0" />
      <LineId Id="15" Count="0" />
      <LineId Id="14" Count="0" />
    </LineIds>
    <LineIds Name="RobotA21_methods_backup.eStop">
      <LineId Id="5" Count="1" />
    </LineIds>
    <LineIds Name="RobotA21_methods_backup.idleCommand">
      <LineId Id="5" Count="0" />
    </LineIds>
    <LineIds Name="RobotA21_methods_backup.Ready.Get">
      <LineId Id="5" Count="0" />
      <LineId Id="9" Count="0" />
      <LineId Id="2" Count="0" />
    </LineIds>
    <LineIds Name="RobotA21_methods_backup.release">
      <LineId Id="5" Count="0" />
      <LineId Id="13" Count="1" />
      <LineId Id="11" Count="1" />
    </LineIds>
    <LineIds Name="RobotA21_methods_backup.reserve">
      <LineId Id="123" Count="7" />
      <LineId Id="97" Count="0" />
    </LineIds>
    <LineIds Name="RobotA21_methods_backup.reset">
      <LineId Id="14" Count="0" />
      <LineId Id="27" Count="0" />
      <LineId Id="34" Count="0" />
      <LineId Id="32" Count="0" />
      <LineId Id="19" Count="0" />
      <LineId Id="15" Count="0" />
      <LineId Id="18" Count="0" />
      <LineId Id="16" Count="1" />
      <LineId Id="35" Count="0" />
    </LineIds>
    <LineIds Name="RobotA21_methods_backup.resume">
      <LineId Id="5" Count="0" />
      <LineId Id="7" Count="0" />
      <LineId Id="6" Count="0" />
    </LineIds>
    <LineIds Name="RobotA21_methods_backup.updateStatus">
      <LineId Id="5" Count="1" />
    </LineIds>
  </POU>
</TcPlcObject>